@using Fashion7.Models;
@using PagedList.Mvc;
@model PagedList.PagedList<Fashion7.Models.DanhMuc>
@helper Truncate(string input, int length)
{

    if (input == null)
    {
        @input
    }
    else if (input.Length < length)
    {
        @input
    }
    else
    {
        @input.Substring(0, length) <text> ...</text>
    }
}
@{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item active" aria-current="page"><h5><i class="uil-tag-alt"></i> Quản lý danh mục </h5> </li>
        </ol>
    </nav>
    Layout = "~/Areas/Admin/Views/Shared/_LayoutHeaderBar.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
   

</head>
<body>

    <p>
        <a class="fw-bolder" href="AddDanhMuc">THÊM DANH MỤC <i class="fa-solid fa-plus-circle"></i></a>
    </p>
    <table class="table table-bordered text-center">
        <tr>
            <th>
                Mã danh mục
            </th>
            <th>
                Tên danh mục
            </th>
            <th>
                Chỉnh sửa
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.idDM)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.tenDM)
                </td>
                <td>
                    <span>
                        @Html.ActionLink("Danh sách sản phẩm", "ListDanhMuc", new { id = item.idDM }, new { @class = "btn btn-success" })
                    </span>
                    <span>
                        @Html.ActionLink("Sửa danh mục", "EditDanhMuc", new { id = item.idDM }, new { @class = "btn btn-dark" })
                    </span>
                    <span>
                        @Html.ActionLink("Xoá danh mục", "DelDanhMuc", new { id = item.idDM }, new { @class = "btn btn-danger" })
                    </span>
                </td>
            </tr>
        }

    </table>
    <div class="d-flex justify-content-center mt-4">
        @Html.PagedListPager(Model, page => Url.Action("QLDanhMuc", new { page = page }), new PagedListRenderOptions { LiElementClasses = new string[] { "page-item btn btn-dark rounded mx-2" } })
    </div>
    <style>

        .page-item > a {
            text-decoration: none;
            font-size: 20px;
            color: white;
            --bs-btn-padding-x: 0.75rem;
            --bs-btn-padding-y: 0.375rem;
            --bs-btn-font-size: 1rem;
            --bs-btn-font-weight: 400;
            --bs-btn-line-height: 1.5;
            --bs-btn-color: #212529;
            --bs-btn-bg: transparent;
            --bs-btn-border-width: 1px;
            --bs-btn-border-color: transparent;
            --bs-btn-border-radius: 0.375rem;
            --bs-btn-hover-border-color: transparent;
            --bs-btn-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);
            --bs-btn-disabled-opacity: 0.65;
            --bs-btn-focus-box-shadow: 0 0 0 0.25rem rgba(var(--bs-btn-focus-shadow-rgb), .5);
            display: inline-block;
            padding: var(--bs-btn-padding-y) var(--bs-btn-padding-x);
            font-family: var(--bs-btn-font-family);
            font-size: var(--bs-btn-font-size);
            font-weight: var(--bs-btn-font-weight);
            line-height: var(--bs-btn-line-height);
            color: white;
            text-align: center;
            text-decoration: none;
            vertical-align: middle;
            cursor: pointer;
            user-select: none;
            border: var(--bs-btn-border-width) solid var(--bs-btn-border-color);
            border-radius: var(--bs-btn-border-radius);
            background-color: var(--bs-btn-bg);
            transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

        a {
            text-decoration: none !important;
        }
    </style>
</body>
</html>



